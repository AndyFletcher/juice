#!/usr/bin/env flusspferd

var io = require( "io" ),
    system = require( "system" ),
    os = require( "os" );

var JuiceCLI = {
  init : function ( name ) {
    // if name wasn't provided, exit
    if ( name === undefined ) throw "Usage: juice init my-new-project";

    // if directory already exists, exit
    if ( io.File.exists( name ) ) throw "Directory " + name + " already exists";

    // create the directory structure
    var tree = [
      name + "/db",
      name + "/lib",
      name + "/script",
      name + "/static/scripts",
      name + "/static/styles",
      name + "/templates"
    ];
    os.system( "mkdir -p " + tree.join( " " ) );

    // lib/app.js
    var lib_app_js = <><![CDATA[// Don't mess with this
var juice = require('juice');
var app = new juice.Application;

// Your actions (well, just one action for now)
app.controllers.index = {
  return {
    docroot : env.juice.docRoot
  }
}

// URL mappings
app.actions = {
  "/" : "index"
};

// Don't mess with this, either
juice.run(app);
]]></> + "";
    io.File( name + "/lib/app.js", "w" ).print( lib_app_js );

    // templates/index.tt
    var templates_index_tt = <><![CDATA[<!DOCTYPE html>
<html>
<head>
  <title>Welcome to Juice</title>
</head>
<body>
  <h1>Welcome to Juice</h1>
  <p>To get started open up <code>[% docroot %]lib/app.js</code> in your
  favourite editor and start poking around.</p>
</body>
</html>]]></> + "";
    io.File( name + "/templates/index.tt", "w" ).print( templates_index_tt );
  }
}

var options = {
  "init" : {
    "alias" : [ "abc", "d" ],
    "argument" : "required"
  }
}

var args = system.args.slice( 1 );
var action = args.shift();

if ( action in JuiceCLI )
  JuiceCLI[ action ].apply( undefined, args );
else
  throw "Valid actions: init";
