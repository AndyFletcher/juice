#!/usr/bin/env flusspferd
// -*- mode:javascript; -*- vim:filetype=javascript:
// Autogenerted - do not edit

var io = require( "io" ),
    system = require( "system" ),
    fs = require( "fs-base" );

var JuiceCLI = {
  init : function ( name ) {
    // if name wasn't provided, exit
    if ( name === undefined ) throw "Usage: juice init my-new-project";

    // if directory already exists, exit
    if ( fs.exists( name ) ) throw "Directory " + name + " already exists";

    // fs-base doesn't have this yet.
    function makeTree(dir) {
      return fs.canonical(dir)
        .split('/')
        .reduce(function(accum, dir) {
          accum += '/' + dir;
          if (!fs.exists(accum)) fs.makeDirectory(accum);
          return accum
        });
    }

    var dir = fs.canonical(makeTree(name));
    // create the directory structure
    var tree = [
      dir + "/db",
      dir + "/lib",
      dir + "/script",
      dir + "/static/scripts",
      dir + "/static/styles",
      dir + "/templates"
    ].map(makeTree);

    io.File.create( dir + "script/server", 0777 );


    // lib/app.js
    fs.rawOpen( dir + "lib/app.js", "w").print(<><![CDATA[// Don't mess these first few lines
const juice = require('juice'),
      DOC_ROOT = module.uri.replace(/^.*?:\/\/(.*?)lib\/app\.js$/, "$1") || "./";

var app = new juice.Application;


// Your actions (well, just one action for now)
app.controllers.index = function( ) {
  return {
    docroot : this.docRoot
  }
}

// URL mappings
app.urls = {
  "/?" : "index",

  "/styles": { static: "./static/styles" },
  "/scripts": { static: "./static/scripts" }
};

// Don't mess with this, either
exports.app = app.setup( DOC_ROOT );

]]></> + "");

    // templates/index.tt
    fs.rawOpen( dir + "templates/index.tt", "w").print(<><![CDATA[<!DOCTYPE html>
<html>
<head>
  <title>Welcome to Juice</title>
  <link rel="stylesheet" type="text/css" href="/styles/app.css">
</head>
<body>
  <h1>Welcome to Juice</h1>
  <p>To get started open up <code>[% docroot %]lib/]]></> + name + <><![CDATA[.js</code> in your
  favourite editor and start poking around.</p>
</body>
</html>
]]></> + "");

    // static/styles/app.css
    fs.rawOpen( dir + "static/styles/app.css", "w").print(<><![CDATA[* { margin: 0; padding: 0; }
]]></> + "");

    // script/server
    fs.rawOpen( dir + "script/server", "w").print(<><![CDATA[#!/usr/bin/env flusspferd
// -*- mode:javascript; -*- vim:filetype=javascript:enc=utf-8:

var args = require('system').args;
var app, baseModules;

if (args[1] != '--no-reload') {
  print("Running ]]></> + name + <><![CDATA[ in reloader mode...");
  app = function(request) {
    // Flusspferd specific - unload modules on request
    for (i in require.module_cache) {
      delete require.module_cache[i];
    }
    gc();

    return require('../lib/app').app(request);
  }
}
else {
  print("Running ]]></> + name + <><![CDATA[ normal mode...");
  app = require( '../lib/app' ).app
}

var server = require( 'zest' ).Zest( {
  handler: app
} );

server.start();

]]></> + "");

    print("Created juice", name, "app in", dir);
  } // end of init
}

var args = system.args.slice( 1 );
var action = args.shift();

if ( action in JuiceCLI )
  JuiceCLI[ action ].apply( undefined, args );
else
  throw "Valid actions: init";

